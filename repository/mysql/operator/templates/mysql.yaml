apiVersion: v1
kind: Service
metadata:
  name: {{ .Name }}-svc
  namespace: {{ .Namespace }}
spec:
  ports:
    - port: 3306
  selector:
    app: {{ .Name }}
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Name }}-pv
  namespace: {{ .Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Params.STORAGE }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Name }}
  namespace: {{ .Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Name }}
      name: mysql
    spec:
      containers:
      - image: mysql:5.7
        name: mysql
        args:
        - "--ignore-db-dir=lost+found"
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: {{ .Params.PASSWORD }}
        - name: MYSQL_DATABASE
          value: kudo
        ports:
        - containerPort: 3306
          name: mysql-port
        volumeMounts:
        - name: {{ .Name }}-persistent-storage
          mountPath: /var/lib/mysql
        livenessProbe:
          exec:
            command: ["mysqladmin", "-p{{ .Params.PASSWORD }}", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            # Check we can execute queries over TCP (skip-networking is off).
            command: ["mysql", "-p{{ .Params.PASSWORD }}", "-h", "127.0.0.1", "-e", "SELECT 1"]
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      volumes:
      - name: {{ .Name }}-persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Name }}-pv
