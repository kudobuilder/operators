{{- if eq .Params.enableHistoryServer "true" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Name }}-history-server
  namespace: {{ .Namespace }}
  labels:
    app.kubernetes.io/name: {{ .OperatorName }}-history-server
    app.kubernetes.io/instance: {{ .Name }}
    app.kubernetes.io/version: {{ .Params.operatorVersion }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .OperatorName }}-history-server
      app.kubernetes.io/instance: {{ .Name }}
      app.kubernetes.io/version: {{ .Params.operatorVersion }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .OperatorName }}-history-server
        app.kubernetes.io/instance: {{ .Name }}
        app.kubernetes.io/version: {{ .Params.operatorVersion }}
    spec:
      {{- if eq .Params.createOperatorServiceAccount "true" }}
      serviceAccountName: {{ .Name }}-{{ .Params.operatorServiceAccountName }}
      {{- else }}
      serviceAccountName: {{ .Params.operatorServiceAccountName }}
      {{- end }}
      containers:
      - name: history-server
        image: {{ .Params.operatorImageName }}:{{ .Params.operatorVersion }}
        imagePullPolicy: {{ .Params.imagePullPolicy }}
        command: ["/opt/spark/sbin/start-history-server.sh"]
        env:
        - name: SPARK_NO_DAEMONIZE
          value: "true"
        {{- if .Params.delegationTokenSecret }}
        - name: HADOOP_TOKEN_FILE_LOCATION
          value: "/mnt/secrets/hadoop.token"
        {{- end }}
        - name: SPARK_HISTORY_OPTS
          value: >-
           {{ .Params.historyServerOpts }}
           -Dspark.history.fs.logDirectory={{ .Params.historyServerFsLogDirectory }}
           -Dspark.history.fs.cleaner.enabled={{ .Params.historyServerCleanerEnabled }}
           -Dspark.history.fs.cleaner.interval={{ .Params.historyServerCleanerInterval }}
           -Dspark.history.fs.cleaner.maxAge={{ .Params.historyServerCleanerMaxAge }}
        ports:
        - containerPort: 18080
          name: "history-server"
        {{- if or (.Params.historyServerSparkConfSecret) (.Params.delegationTokenSecret) (.Params.historyServerPVCName) }}
        volumeMounts:
          {{- if .Params.historyServerSparkConfSecret }}
          - name: spark-conf
            mountPath: "/opt/spark/conf"
            readOnly: true
          {{- end }}
          {{- if .Params.delegationTokenSecret }}
          - name: hadoop-token
            mountPath: /mnt/secrets
            readOnly: true
          {{- end }}
          {{- if .Params.historyServerPVCName }}
          - mountPath: "{{ .Params.historyServerFsLogDirectory }}"
            name: history-server-storage
          {{- end }}
        {{- end }}
      {{- if or (.Params.historyServerSparkConfSecret) (.Params.delegationTokenSecret) (.Params.historyServerPVCName) }}
      volumes:
        {{- if .Params.historyServerSparkConfSecret }}
        - name: spark-conf
          secret:
            secretName: {{ .Params.historyServerSparkConfSecret }}
        {{- end }}
        {{- if .Params.delegationTokenSecret }}
        - name: hadoop-token
          secret:
            secretName: hadoop-token
        {{- end }}
        {{- if .Params.historyServerPVCName }}
        - name: history-server-storage
          persistentVolumeClaim:
            claimName: {{ .Params.historyServerPVCName }}
        {{- end }}
      {{- end}}
{{- end }}
