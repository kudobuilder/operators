apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Name }}-generate-tls-artifacts-sh
  namespace: {{ .Namespace }}
data:
  generate-tls-artifacts.sh: |
    #!/usr/bin/env bash

    set -euxo pipefail

    mkdir -p /etc/cassandra/tls
    pushd /etc/cassandra/tls

    readonly certificate="tls.crt"
    readonly private_key="tls.key"

    set +x
    readonly truststore_password=$(cat /etc/cassandra/truststore/truststore_password)
    readonly keystore_password=$(cat /etc/cassandra/truststore/keystore_password)

    # In days.
    readonly validity=900

    readonly server_keystore="cassandra.server.keystore.jks"
    readonly server_truststore="cassandra.server.truststore.jks"
    readonly client_truststore="cassandra.client.truststore.jks"

    # Copy CA authority certificate and key obtained from secrets.
    cp "/etc/tls/certs/${certificate}" "/etc/cassandra/tls/${certificate}"
    cp "/etc/tls/certs/${private_key}" "/etc/cassandra/tls/${private_key}"

    # Generate keystore and truststore.
    keytool -keystore "${server_keystore}" \
            -alias localhost \
            -validity ${validity} \
            -genkey \
            -keyalg RSA \
            -dname "CN=$(hostname -f)" \
            -storepass "${truststore_password}" \
            -keypass "${keystore_password}" \
            -noprompt

    # Add the CACert to the client and server truststores so that clients and
    # server can trust this CA.
    keytool -keystore "${client_truststore}" \
            -alias CARoot \
            -import \
            -file "/etc/cassandra/tls/${certificate}" \
            -storepass "${truststore_password}" \
            -noprompt

    keytool -keystore "${server_truststore}" \
            -alias CARoot \
            -importcert \
            -file "/etc/cassandra/tls/${certificate}" \
            -storepass "${truststore_password}" \
            -noprompt

    # Create a certificate signing request.
    keytool -keystore "${server_keystore}" \
            -alias localhost \
            -certreq \
            -file cert-req \
            -storepass "${truststore_password}"

    # Add openssl certificate signing extension config file.
    cat > csr.conf <<EOF
    [ req_ext ]
    subjectAltName = @alt_names
    extendedKeyUsage = serverAuth, clientAuth

    [ alt_names ]
    DNS.1 = localhost
    DNS.2 = 127.0.0.1
    DNS.3 = $(hostname -f)
    DNS.4 = $(hostname -i)
    DNS.5 = $(hostname)
    IP.1 = 0.0.0.0
    IP.2 = 127.0.0.1
    IP.3 = $(hostname -i)
    EOF

    # Sign the certificate with the CA & CAkey.
    openssl x509 -req \
        -CA /etc/cassandra/tls/${certificate} \
        -CAkey /etc/cassandra/tls/${private_key} \
        -in cert-req \
        -out cert-signed \
        -days ${validity} \
        -CAcreateserial \
        -passin "pass:${truststore_password}" \
        -extfile csr.conf \
        -extensions req_ext

    # Import the CA cert into server keystore.
    keytool -keystore "${server_keystore}" \
            -alias CARoot \
            -import \
            -file "/etc/cassandra/tls/${certificate}" \
            -storepass "${truststore_password}" \
            -noprompt

    # Import the signed certificate into server keystore.
    keytool -keystore "${server_keystore}" \
            -alias localhost \
            -import \
            -file cert-signed \
            -storepass "${truststore_password}" \
            -noprompt
    popd
