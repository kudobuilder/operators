kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ .Name }}-master
  namespace: {{ .Namespace }}
spec:
  selector:
    matchLabels:
      app: master # has to match .spec.template.metadata.labels
  serviceName: {{ .Name }}-master-hs
  replicas: 3
  template:
    metadata:
      labels:
        app: master # has to match .spec.selector.matchLabels
    spec:
      initContainers:
        - name: init-sysctl
          image: busybox
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
          securityContext:
            privileged: true
        - name: volume-permissions
          image: busybox
          command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/data']
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
      terminationGracePeriodSeconds: 10
      containers:
        - name: elastic
          image: elasticsearch:7.0.0
          resources:
            requests:
              cpu: {{ .Params.MASTER_CPU }}
              memory: {{ .Params.MASTER_MEM }}
          ports:
            - containerPort: 9200
              name: api
            - containerPort: 9300
              name: internal
          env:
            - name: cluster.name
              value: {{ .Name }}-cluster
            - name: discovery.seed_hosts
              value: {{ .Name }}-master-0.{{ .Name }}-master-hs,{{ .Name }}-master-1.{{ .Name }}-master-hs,{{ .Name }}-master-2.{{ .Name }}-master-hs
            - name: cluster.initial_master_nodes
              value: {{ .Name }}-master-0,{{ .Name }}-master-1,{{ .Name }}-master-2
            - name: node.master
              value: "true"
            - name: node.data
              value: "false"
            - name: node.ingest
              value: "false"
            - name: cluster.remote.connect
              value: "false"
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Params.MASTER_DISK }}
        {{ if .Params.STORAGE_CLASS }}
        storageClassName: {{ .Params.STORAGE_CLASS }}
        {{ end }}
